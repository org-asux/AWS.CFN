### This is the file 'AWSCFN-fullstack-vpc-Create.ASUX-batch.txt'

### The 1st thing you do - Is to define's the JOB-parameters
### You can do it in 2 ways (or do both ways, as shown in next 3 lines below):-
###	(1) Via a properties-file
###	(2) or via setProperty

//=============================================================
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//=============================================================
### Now load the common stuff - that's common to all jobs

include @${ASUX::AWSCFNHOME}/bin/AWSCFN-CommonHeader-FullStack.ASUX-batch.txt

//=============================================================
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//=============================================================

### Any ___OVERRIDES___ already came in via JobSetName.yaml

//=============================================================
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//=============================================================
### Load the external inputs (in this case, the list of AZs for the region of interest)

aws.sdk --list-AZs      ${ASUX::AWSRegion} --offline
#________ useAsInput @${ASUX::AWSHOME}/AWS-SDK/etc/offline-downloads/AWS.AZlist-${ASUX::AWSRegion}.yaml   ### This code to the LEFT, should be automatically invoked by previous line for --offline
saveTo !AWSAZs

//=============================================================
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//=============================================================
### Now build the CFN script I want

useAsInput @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/TopYaml.yaml
saveTo !YAMLROOT

yaml --insert / @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/Parameters-VPC.yaml
yaml --macro ''
saveTo !YAMLROOT

	// Depending on whether we are CREATING a new IGW.. or leveraging an existing one
useAsInput ''
saveTo		!Parameter-IGW
useAsInput	?@${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/Parameters-IGW${ASUX::IGWExistingOrNew}.yaml	### If the following file _EXISTS_ it will overwrite the saveTo label 'Parameter-IGW'
saveTo		!Parameter-IGW

useAsInput !YAMLROOT
yaml --insert     Parameters   !Parameter-IGW
yaml --macro ''
saveTo !YAMLROOT

//--------------------------------------------------

#____	makeNewRoot Conditions
#____	saveTo !Conditions

#____	useAsInput !AWSAZs
#____	
#____	foreach
#____		useAsInput !Conditions
#____		yaml --insert Conditions @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/Conditions-VPC.yaml
#____		yaml --macro ''
#____		saveTo !Conditions
#____	end

#____	useAsInput !YAMLROOT
#____	yaml --insert / !Conditions
#____	saveTo !YAMLROOT

//--------------------------------------------------

makeNewRoot Resources
yaml --insert Resources @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/VPC.yaml
yaml --macro ''	### !!!!!!!!!!!!!!!!! ATTENTION !!!!!!!!!!!!! This double-back2back macro is NEEDED, else we will have 'cloned' VPC under Resources/ YAML.

yaml --insert Resources,${ASUX::MyVPCName},Properties  @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/Tags.yaml     --delimiter ,
yaml --macro ''
saveTo !TopElemResources

//--------------------------------------------------
useAsInput !TopElemResources

### !!!!!!!!!!!!!! ATTENTION !!!!!!!!!!!!!!!!!!
### Internet gateways per Region = 5.  This limit is directly correlated with the limit on 5 VPCs per Region.

include ?@${ASUX::AWSCFNHOME}/bin/AWSCFN-IGW-${ASUX::IGWExistingOrNew}.txt
	### Note: '?' Prefix implies optional include, ONLY if it exists.


yaml --insert Resources @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/PublicRouteTable.yaml
setProperty Tag_Name=PublicRT-${ASUX::MyVPCStackPrefix}
yaml --insert Resources,MyPublicRouteTable,Properties  @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/Tags.yaml     --delimiter ,
yaml --macro ''
yaml --insert Resources @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/PublicRoute.yaml

saveTo !TopElemResources

//--------------------------------------------------
useAsInput !AWSAZs
foreach
	### We'll go with the best design (__MULTIPLE__ PRIVATE RTs), to enable Private Subnet instances to access internet, in a very FAULT-TOLERANT way.
	useAsInput !TopElemResources

	yaml --insert Resources @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/PrivateRouteTable.yaml
	yaml --macro ''
	setProperty Tag_Name=PrivateRT-AZ${ASUX::foreach.index+1}-${ASUX::MyVPCStackPrefix}
	yaml --insert Resources,MyPrivateRouteTableAZ${ASUX::foreach.index+1},Properties  @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/Tags.yaml     --delimiter ,
	yaml --macro ''

	saveTo !TopElemResources
end

//--------------------------------------------------
useAsInput !TopElemResources

yaml --insert Resources @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/ACLDefault.yaml
setProperty Tag_Name=NACL-Public-${ASUX::MyVPCStackPrefix}
yaml --insert Resources,MyDefaultNetworkAcl,Properties  @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/Tags.yaml     --delimiter ,
yaml --macro ''

yaml --insert Resources @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/ACLPrivate.yaml
setProperty Tag_Name=NACL-Private-${ASUX::MyVPCStackPrefix}
yaml --insert Resources,MyPrivateNetworkAcl,Properties  @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/Tags.yaml     --delimiter ,
yaml --macro ''

saveTo !TopElemResources

//--------------------------------------------------
setProperty WhichNACLRef=MyDefaultNetworkAcl	### The RHS of the '=' refers to the CFN-Template-Parameter that points to the EXPORT for the NACL - for Public SUBNET

include @${ASUX::AWSCFNHOME}/bin/AWSCFN-NACL-subnet-Public.txt

setProperty WhichNACLRef=MyPrivateNetworkAcl	### The RHS of the '=' refers to the CFN-Template-Parameter that points to the EXPORT for the NACL - for PRIVATE SUBNET

include @${ASUX::AWSCFNHOME}/bin/AWSCFN-NACL-subnet-Private.txt

//--------------------------------------------------
print include ?@${ASUX::AWSCFNHOME}/bin/${ASUX::Rt53VPCAssocGenScript} \n
include ?@${ASUX::AWSCFNHOME}/bin/${ASUX::Rt53VPCAssocGenScript}   ### Typically, 'Rt53VPCAssocGenScript' === 'AWSCFN-Rt53-VPCAssociation.txt'

//--------------------------------------------------
useAsInput !YAMLROOT
yaml --insert / !TopElemResources
saveTo !YAMLROOT

//=============================================================
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//=============================================================
makeNewRoot Outputs
yaml --insert     Outputs    @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/Outputs-VPC.yaml
yaml --macro ''
saveTo !TopElemOutputs

//--------------------------------------------------
useAsInput !AWSAZs
	
foreach
	useAsInput !TopElemOutputs
	yaml --insert     Outputs    @${ASUX::AWSCFNHOME}/AWSCFN.templates-pieces/Outputs-PrivateRouteTable.yaml
	yaml --macro ''
	saveTo !TopElemOutputs
end

//--------------------------------------------------
useAsInput !YAMLROOT
yaml --insert     /    !TopElemOutputs
yaml --macro ''
saveTo !YAMLROOT

//--------------------------------------------------

#EoF
