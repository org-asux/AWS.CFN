AWS:
  AWSRegion: Ohio
  MyOrgName: org-ASUX
  MyEnvironment: Playground
  MyDomainName: playground.asux.org

  VPC:

    ### !!!!!!!! ATTENTION !!!!!!!!! By default, _EVERY_ AWS security-group automatically includes an outbound-rule that allows all outbound-traffic.
    ### So .. we're just focused on .. _JUST_ restricting INBOUND-traffic.
    SG:
    - SG-nickname: ssh
      SG-type: ssh
      #___ SG-ID: sg-01234567890ab  ### REQUIREMENT: If VPC-ID and __EVEN__ 1-single Subnet-ID is specified, then SG must be specified.
    SG:
    - SG-nickname: web
      SG-type: https
    SG:
    - SG-nickname: postgres           ### incl. RDS & Aurora
      SG-type: 5432
    # SG:
    # - SG-nickname: MYSQL            ### incl. RDS & Aurora
    #   SG-type: 3306
    # SG:
    # - SG-nickname: MS-SQL           ### incl. RDS
    #   SG-type: 1433
    # SG:
    # - SG-nickname: Amazon Redshift cluster
    #   SG-type: 5439
    # SG:
    # - SG-nickname: Oracle
    #   SG-type: 1521

    subnet:
      public: yes+NATGW   ### Attention: The public subnet must _ALWAYS_ _PRECEDE_ the _PRIVATE_ subnet(s) creation.
                    ### The only reason: The Public-subnet will have NAT-GW in it, and.. CFN-EXPORT-names for the NAT-Gateway is a PRE-REQUISITE for the PRIVATE-subnets

      SERVERS:
        MyWebASUXLinux1:            ### This is the name of the 1st SERVER.   This is also used to create the DNS name as 'MyWebASUXLinux1.{MyDomainName}'
          EC2InstanceType: t2.micro
          # public: no  ### By default this server will be publicly accessible, as it's in the public-subnet.

          SG:
          - ssh
          - web
          - postgres

          MyIAM-roles:
          - EC2-ReadWrite-to-S3

          yum:
            amazon-efs-utils: []
            tcsh: []
            git: []
            maven: []

          # rpm:
            # amazon-efs-utils: []
            # tcsh: []
            # git: []
            # maven: []

          # configCustomCommands: 
            # customCommand1: 
            #   testShell: 
            #     command: "echo \"$CFNTEST\" > /tmp/test.txt"
            #     env: 
            #       CFNTEST: "I come from CFN-template's configCustomCommands/customCommand1."
            #     cwd: "/tmp"

          Services:
            sysvinit:
              httpd:
                enabled: 'false'
                ensureRunning: 'false'
              sendmail:
                enabled: false'
                ensureRunning: 'false'

    subnet:
      public: no

      SERVERS:
        MyPrivASUXLinux2:           ### This is the name of the 2nd SERVER.   This is also used to create the DNS name as 'MyPrivASUXLinux2.{MyDomainName}'
          EC2InstanceType: t2.micro
          # public: no    ### By default this server is ___NOT___ publicly accessible, as it's in the private-subnet.

          MyIAM-roles:
          - EC2-ReadWrite-to-S3

          SG:
          - ssh
          - postgres

          yum:
            amazon-efs-utils: []
            tcsh: []
            git: []
            maven: []

          # rpm:
            # amazon-efs-utils: []
            # tcsh: []
            # git: []
            # maven: []

          # configCustomCommands: 
            # customCommand1: 
            #   testShell: 
            #     command: "echo \"$CFNTEST\" > /tmp/test.txt"
            #     env: 
            #       CFNTEST: "I come from CFN-template's configCustomCommands/customCommand1."
            #     cwd: "/tmp"

          Services:
            sysvinit:
              httpd:
                enabled: 'false'
                ensureRunning: 'false'
              sendmail:
                enabled: false'
                ensureRunning: 'false'


            ### EoF
